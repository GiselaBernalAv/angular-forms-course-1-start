<mat-card class="login-page">
  <mat-card-title>Login</mat-card-title>
  <mat-card-content>
    <form class="login-form data-form" #loginForm="ngForm"
    (ngSubmit)="login(loginForm, $event)">
      <mat-form-field >

        <input matInput type="email" name="email" ngModel

                #email="ngModel" required email minlength="3"
               (ngModelChange)="onEmailChange($event)"
               placeholder="Email">

          <mat-error *ngIf ="email.errors?.required">The email is mandatory</mat-error>
          <mat-error *ngIf ="email.errors?.minlength"> The email must have at least 3 chars</mat-error>
          <mat-error *ngIf ="email.errors?.email"> This is not a valid email</mat-error>
      </mat-form-field>

      <mat-form-field>
        <input matInput type="password" name="password" minlength="8"
              required passwordStrength ngModel
              #password="ngModel"
               placeholder="Password">
      </mat-form-field>
      <ng-container *ngIf="password.errors | onlyOneError:
                    ['required','minlength','passwordStrength'] as error">
          <div class="field-message" *ngIf ="error?.required">The password is mandatory</div>
          <div class="field-message" *ngIf ="error?.minlength"> The password must have at least 8 chars,
                      but only has {{error?.minlength.actualLength}}
          </div>
          <div class="field-message" *ngIf="error?.passwordStrength">
            Your password must have lower case, upper case and numeric characters
          </div>
       </ng-container>

      <button mat-raised-button color="primary" type="submit"
      [disabled] = "!loginForm.valid" >
        Login
    </button>

    </form>
    <div class="form-val">
      <!-- {{loginForm.value | json}} -->
      <!-- {{email.value + ' ' + pwd.value + ' ' + email.valid}} -->
      <!-- {{email.errors | json}} -->
      {{password.errors | json}}
    </div>
  </mat-card-content>
</mat-card>

<!-- 3 states, touched, durty and valid-->
<!-- pattern-->
<!-- if [ngModelOptions]="{updateOn: 'blur'} esta como : 'submit' -->
<!--   hay otra opcion en ngmodeloptions que es standalone: true, o sea que se separa -->
<!--  del ngform para la validacion     es mejor quitar el disabled en button-->
    <!-- esta linea de abajo se cambio quitandole password al bojeto de error de ng container -->
    <!-- <mat-error *ngIf ="password.errors?.required">The password is mandatory</mat-error> -->
       <!-- [ngModel]="val.email" [ngModelOptions]="{name: 'email'}"
       [ngModel]="val.password" -->

       <!-- los mat error se pueden cambiar solo por div class=field-message  -->
<!--   <mat-error *ngIf ="error?.required">The password is mandatory</mat-error>
          <mat-error *ngIf ="error?.minlength"> The password must have at least 8 chars,
                      but only has {{error?.minlength.actualLength}}
          </mat-error>
          <mat-error *ngIf="error?.passwordStrength">
            Your password must have lower case, upper case and numeric characters
          </mat-error> -->
